#!/bin/bash -x

source public-ip-addresses

kubectl create secret generic kubernetes-the-hard-way \
  --from-literal="mykey=mydata"

 ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
   -i kubernetes-the-hard-way.id_rsa \
   ubuntu@"${PUBLIC_ADDRESS[controller-0]}" \
   "sudo ETCDCTL_API=3 etcdctl get \
   --endpoints=https://127.0.0.1:2379 \
   --cacert=/etc/etcd/ca.pem \
   --cert=/etc/etcd/kubernetes.pem \
   --key=/etc/etcd/kubernetes-key.pem\
   /registry/secrets/default/kubernetes-the-hard-way | hexdump -C"

echo "Create a deployment for the nginx web server:"
kubectl create deployment nginx --image=nginx

sleep 2
kubectl get pods -l app=nginx

echo "Expose the nginx deployment using a NodePort service"
kubectl expose deployment nginx --port 80 --type NodePort

echo "Retrieve the node port assigned to the nginx service"
NODE_PORT=$(kubectl get svc nginx \
  --output=jsonpath='{range .spec.ports[0]}{.nodePort}')

echo "Allow remote access to nginx node port"
SECURITY_GROUP_ID=$(aws ec2 describe-security-groups \
--filters "Name=tag:Name,Values=kubernetes-the-hard-way" \
--output text --query 'SecurityGroups[0].GroupId')

aws ec2 authorize-security-group-ingress \
  --group-id "${SECURITY_GROUP_ID}" \
  --protocol tcp \
  --port "${NODE_PORT}" \
  --cidr 0.0.0.0/0

echo "Retrieve the external IP address of a worker instance"
EXTERNAL_IP=${PUBLIC_ADDRESS[worker-0]}
echo "${EXTERNAL_IP}"

echo "Make an HTTP request using the external IP address and the nginx node port"
curl -I http://"${EXTERNAL_IP}":"${NODE_PORT}"